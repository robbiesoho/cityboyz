{"ast":null,"code":"var _jsxFileName = \"/Users/robertporto/env/cityboyz/client/src/components/Authors/AuthorBlerb.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\"; // import { getAuthor } from \".../actions/authorActions\";\n\nimport PropTypes from \"prop-types\";\n\nclass AuthorBlerb extends Component {\n  componentDidMount() {// this.props.getAuthor(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(\"BERB PROPS\");\n    console.log(this.props.authorId);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, \"This is a blerb\"));\n  }\n\n}\n\nAuthorBlerb.propTypes = {\n  getAuthor: PropTypes.func.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(\"My BERB store state ===>\", state); // log the `state` and see the exact path for articles\n\n  return {\n    author: state.article\n  };\n};\n\nexport default connect(mapStateToProps, {})(AuthorBlerb);","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/components/Authors/AuthorBlerb.js"],"names":["React","Component","Container","connect","PropTypes","AuthorBlerb","componentDidMount","render","console","log","props","authorId","propTypes","getAuthor","func","isRequired","author","object","mapStateToProps","state","article"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,QAAvB;AACA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAKD;;AAbiC;;AAgBpCN,WAAW,CAACO,SAAZ,GAAwB;AACtBC,EAAAA,SAAS,EAAET,SAAS,CAACU,IAAV,CAAeC,UADJ;AAEtBC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,MAAV,CAAiBF;AAFH,CAAxB;;AAKA,MAAMG,eAAe,GAAIC,KAAD,IAAW;AACjCX,EAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCU,KAAxC,EADiC,CACe;;AAChD,SAAO;AACLH,IAAAA,MAAM,EAAEG,KAAK,CAACC;AADT,GAAP;AAGD,CALD;;AAOA,eAAejB,OAAO,CAACe,eAAD,EAAkB,EAAlB,CAAP,CAA6Bb,WAA7B,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n// import { getAuthor } from \".../actions/authorActions\";\nimport PropTypes from \"prop-types\";\n\nclass AuthorBlerb extends Component {\n  componentDidMount() {\n    // this.props.getAuthor(this.props.match.params.id);\n  }\n\n  render() {\n    console.log(\"BERB PROPS\");\n    console.log(this.props.authorId);\n    return (\n      <Container>\n        <h1>This is a blerb</h1>\n      </Container>\n    );\n  }\n}\n\nAuthorBlerb.propTypes = {\n  getAuthor: PropTypes.func.isRequired,\n  author: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"My BERB store state ===>\", state); // log the `state` and see the exact path for articles\n  return {\n    author: state.article,\n  };\n};\n\nexport default connect(mapStateToProps, {})(AuthorBlerb);\n"]},"metadata":{},"sourceType":"module"}