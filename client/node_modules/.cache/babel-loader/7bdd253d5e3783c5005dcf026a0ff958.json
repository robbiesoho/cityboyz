{"ast":null,"code":"var _jsxFileName = \"/Users/robertporto/env/cityboyz/client/src/components/Authors/AuthorBlerb.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\"; // import { getAuthor } from \".../actions/authorActions\";\n\nimport PropTypes from \"prop-types\";\n\nclass AuthorBlerb extends Component {\n  componentDidMount() {// this.props.getAuthor(this.props.match.params.id);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }\n    }, \"This is a blerb\"));\n  }\n\n}\n\nAuthorBlerb.propTypes = {\n  // getAuthor: PropTypes.func.isRequired,\n  author: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => {\n  console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n\n  return {\n    author: state.article\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getAuthor\n})(AuthorBlerb);","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/components/Authors/AuthorBlerb.js"],"names":["React","Component","Container","connect","PropTypes","AuthorBlerb","componentDidMount","render","propTypes","author","object","isRequired","mapStateToProps","state","console","log","article","getAuthor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAClCK,EAAAA,iBAAiB,GAAG,CAClB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CADF;AAKD;;AAXiC;;AAcpCF,WAAW,CAACG,SAAZ,GAAwB;AACtB;AACAC,EAAAA,MAAM,EAAEL,SAAS,CAACM,MAAV,CAAiBC;AAFH,CAAxB;;AAKA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAnC,EADiC,CACU;;AAC3C,SAAO;AACLJ,IAAAA,MAAM,EAAEI,KAAK,CAACG;AADT,GAAP;AAGD,CALD;;AAOA,eAAeb,OAAO,CAACS,eAAD,EAAkB;AAAEK,EAAAA;AAAF,CAAlB,CAAP,CAAwCZ,WAAxC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\n// import { getAuthor } from \".../actions/authorActions\";\nimport PropTypes from \"prop-types\";\n\nclass AuthorBlerb extends Component {\n  componentDidMount() {\n    // this.props.getAuthor(this.props.match.params.id);\n  }\n\n  render() {\n    return (\n      <Container>\n        <h1>This is a blerb</h1>\n      </Container>\n    );\n  }\n}\n\nAuthorBlerb.propTypes = {\n  // getAuthor: PropTypes.func.isRequired,\n  author: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => {\n  console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n  return {\n    author: state.article,\n  };\n};\n\nexport default connect(mapStateToProps, { getAuthor })(AuthorBlerb);\n"]},"metadata":{},"sourceType":"module"}