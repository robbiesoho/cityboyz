{"ast":null,"code":"var _jsxFileName = \"/Users/robertporto/env/cityboyz/client/src/components/Article.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport { getAuthor } from \"../actions/authorActions\";\nimport PropTypes from \"prop-types\";\n\nclass Article extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.match.params.id);\n  }\n\n  componentDidUpdate() {\n    if (this.props.article) {\n      console.log(\"hello\");\n      console.log(this.props.article._id);\n      console.log(this.props.article.article.articleId); // this.props.getAuthor(this.props.article.authorId);\n    }\n  }\n\n  render() {\n    if (this.props.article.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 14\n        }\n      }, \"Loading!\");\n    }\n\n    const data = this.props.article.article;\n\n    function checkAndRenderBody() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.body.split(\"\\r\").map(c => {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 18\n            }\n          }, \" \", c, \" \");\n        });\n      }\n    }\n\n    function checkAndRenderName() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.name;\n      }\n    }\n\n    function checkAndRenderAuthor() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.author;\n      }\n    }\n\n    function checkAndRenderID() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data._id;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, checkAndRenderName()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, checkAndRenderAuthor()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, checkAndRenderBody()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, checkAndRenderID()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Back to index\"));\n  }\n\n}\n\nArticle.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  getAuthor: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  article: state.article\n});\n\nexport default connect(mapStateToProps, {\n  getArticle,\n  getAuthor\n})(Article);","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/components/Article.js"],"names":["React","Component","Container","Link","connect","getArticle","getAuthor","PropTypes","Article","componentDidMount","props","match","params","id","componentDidUpdate","article","console","log","_id","articleId","render","loading","data","checkAndRenderBody","body","split","map","c","checkAndRenderName","name","checkAndRenderAuthor","author","checkAndRenderID","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport { getAuthor } from \"../actions/authorActions\";\nimport PropTypes from \"prop-types\";\n\nclass Article extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.match.params.id);\n  }\n\n  componentDidUpdate() {\n    if (this.props.article) {\n      console.log(\"hello\");\n      console.log(this.props.article._id);\n      console.log(this.props.article.article.articleId);\n      // this.props.getAuthor(this.props.article.authorId);\n    }\n  }\n\n  render() {\n    if (this.props.article.loading) {\n      return <p>Loading!</p>;\n    }\n\n    const data = this.props.article.article;\n\n    function checkAndRenderBody() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.body.split(\"\\r\").map((c) => {\n          return <p> {c} </p>;\n        });\n      }\n    }\n    function checkAndRenderName() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.name;\n      }\n    }\n    function checkAndRenderAuthor() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.author;\n      }\n    }\n    function checkAndRenderID() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data._id;\n      }\n    }\n\n    return (\n      <Container>\n        <p>{checkAndRenderName()}</p>\n        <p>{checkAndRenderAuthor()}</p>\n        <p>{checkAndRenderBody()}</p>\n        <p>{checkAndRenderID()}</p>\n        <br />\n\n        <Link to=\"/\">Back to index</Link>\n      </Container>\n    );\n  }\n}\n\nArticle.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  getAuthor: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  article: state.article,\n});\n\nexport default connect(mapStateToProps, { getArticle, getAuthor })(Article);\n"]},"metadata":{},"sourceType":"module"}