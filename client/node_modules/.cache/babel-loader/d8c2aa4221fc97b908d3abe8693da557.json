{"ast":null,"code":"import { GET_ARTICLES, GET_ARTICLE, ADD_ARTICLE, DELETE_ARTICLE, ARTICLES_LOADING } from \"../actions/types\";\nconst intialState = {\n  articles: [],\n  loading: false\n};\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return { ...state,\n        articles: action.payload,\n        loading: false\n      };\n\n    case GET_ARTICLE:\n      console.log(\"doing get article\"); // find the article and merge more details\n      // const article = state.articles.find(\n      //   (article) => article._id === action.payload._id\n      // );\n      // const article = { ...article, ...action.payload };\n      // since state has reference of article via references, your state has now new values.\n\n      return { ...state,\n        articles: {\n          [action.payload._id]: action.payload\n        },\n        loading: false\n      };\n    // case GET_ARTICLES:\n    //   return {\n    //     ...state,\n    //     articles: action.payload,\n    //     loading: false,\n    //   };\n    // case GET_ARTICLE:\n    //   const article = articles.find((art) => art._id === action.payload._id);\n    //   article = { ...article, ...action.payload };\n    //   return {\n    //     ...state,\n    //     articles: {\n    //       [action.payload._id]: action.payload,\n    //     },\n    //   };\n\n    case DELETE_ARTICLE:\n      return { ...state,\n        articles: state.articles.filter(article => article._id !== action.payload)\n      };\n\n    case ADD_ARTICLE:\n      return { ...state,\n        articles: [action.payload, ...state.articles]\n      };\n\n    case ARTICLES_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/reducers/articleReducer.js"],"names":["GET_ARTICLES","GET_ARTICLE","ADD_ARTICLE","DELETE_ARTICLE","ARTICLES_LOADING","intialState","articles","loading","state","action","type","payload","console","log","_id","filter","article"],"mappings":"AAAA,SACEA,YADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,cAJF,EAKEC,gBALF,QAMO,kBANP;AAQA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,OAAO,EAAE;AAFS,CAApB;AAKA,eAAe,UAAUC,KAAK,GAAGH,WAAlB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,YAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELF,QAAAA,QAAQ,EAAEG,MAAM,CAACE,OAFZ;AAGLJ,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,WAAL;AACEW,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EADF,CAEE;AACA;AACA;AACA;AACA;AACA;;AACA,aAAO,EACL,GAAGL,KADE;AAELF,QAAAA,QAAQ,EAAE;AACR,WAACG,MAAM,CAACE,OAAP,CAAeG,GAAhB,GAAsBL,MAAM,CAACE;AADrB,SAFL;AAKLJ,QAAAA,OAAO,EAAE;AALJ,OAAP;AAQF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKJ,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeS,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACF,GAAR,KAAgBL,MAAM,CAACE,OAD5B;AAFL,OAAP;;AAMF,SAAKT,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAE,CAACG,MAAM,CAACE,OAAR,EAAiB,GAAGH,KAAK,CAACF,QAA1B;AAFL,OAAP;;AAIF,SAAKF,gBAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOC,KAAP;AAzDJ;AA2DD","sourcesContent":["import {\n  GET_ARTICLES,\n  GET_ARTICLE,\n  ADD_ARTICLE,\n  DELETE_ARTICLE,\n  ARTICLES_LOADING,\n} from \"../actions/types\";\n\nconst intialState = {\n  articles: [],\n  loading: false,\n};\n\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return {\n        ...state,\n        articles: action.payload,\n        loading: false,\n      };\n    case GET_ARTICLE:\n      console.log(\"doing get article\");\n      // find the article and merge more details\n      // const article = state.articles.find(\n      //   (article) => article._id === action.payload._id\n      // );\n      // const article = { ...article, ...action.payload };\n      // since state has reference of article via references, your state has now new values.\n      return {\n        ...state,\n        articles: {\n          [action.payload._id]: action.payload,\n        },\n        loading: false,\n      };\n\n    // case GET_ARTICLES:\n    //   return {\n    //     ...state,\n    //     articles: action.payload,\n    //     loading: false,\n    //   };\n    // case GET_ARTICLE:\n    //   const article = articles.find((art) => art._id === action.payload._id);\n    //   article = { ...article, ...action.payload };\n    //   return {\n    //     ...state,\n    //     articles: {\n    //       [action.payload._id]: action.payload,\n    //     },\n    //   };\n    case DELETE_ARTICLE:\n      return {\n        ...state,\n        articles: state.articles.filter(\n          (article) => article._id !== action.payload\n        ),\n      };\n    case ADD_ARTICLE:\n      return {\n        ...state,\n        articles: [action.payload, ...state.articles],\n      };\n    case ARTICLES_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}