{"ast":null,"code":"var _jsxFileName = \"/Users/robertporto/env/cityboyz/client/src/components/ArticleShow.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport PropTypes from \"prop-types\";\n\nclass ArticleShow extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.id);\n  }\n\n  render() {\n    if (this.props.article.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 14\n        }\n      }, \"Loading...\");\n    }\n\n    if (this.props.article.loading == true) {\n      const data = this.props.article.article.data;\n      console.log(this.props.article.article.data);\n      const dataArr = Object.values(data);\n      console.log(\"data: \");\n      console.log(data);\n      console.log(dataArr);\n    } // console.log(typeof dataArr[0]);\n    // renderArticle = (article) => {\n    //   for (const key of Object.keys(article)) {\n    //     console.log(key, article[key]);\n    //   }\n    // };\n\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    });\n  }\n\n}\n\nArticleShow.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  //   console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n  //   return {\n  //     article: state.article.articles,\n  //   };\n  // };\n  article: state.article\n});\n\nexport default connect(mapStateToProps, {\n  getArticle\n})(ArticleShow);","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/components/ArticleShow.js"],"names":["React","Component","Container","connect","getArticle","PropTypes","ArticleShow","componentDidMount","props","id","render","article","loading","data","console","log","dataArr","Object","values","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAClCM,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWJ,UAAX,CAAsB,KAAKI,KAAL,CAAWC,EAAjC;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKF,KAAL,CAAWG,OAAX,CAAmBC,OAAvB,EAAgC;AAC9B,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD;;AAED,QAAI,KAAKJ,KAAL,CAAWG,OAAX,CAAmBC,OAAnB,IAA8B,IAAlC,EAAwC;AACtC,YAAMC,IAAI,GAAG,KAAKL,KAAL,CAAWG,OAAX,CAAmBA,OAAnB,CAA2BE,IAAxC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWG,OAAX,CAAmBA,OAAnB,CAA2BE,IAAvC;AACA,YAAMG,OAAO,GAAGC,MAAM,CAACC,MAAP,CAAcL,IAAd,CAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACD,KAZM,CAcP;AAEA;AACA;AACA;AACA;AACA;;;AAEA,wBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAYD;;AAvCiC;;AA0CpCV,WAAW,CAACa,SAAZ,GAAwB;AACtBf,EAAAA,UAAU,EAAEC,SAAS,CAACe,IAAV,CAAeC,UADL;AAEtBV,EAAAA,OAAO,EAAEN,SAAS,CAACiB,MAAV,CAAiBD;AAFJ,CAAxB;;AAKA,MAAME,eAAe,GAAIC,KAAD,KAAY;AAClC;AACA;AACA;AACA;AACA;AACAb,EAAAA,OAAO,EAAEa,KAAK,CAACb;AANmB,CAAZ,CAAxB;;AASA,eAAeR,OAAO,CAACoB,eAAD,EAAkB;AAAEnB,EAAAA;AAAF,CAAlB,CAAP,CAAyCE,WAAzC,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport PropTypes from \"prop-types\";\n\nclass ArticleShow extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.id);\n  }\n\n  render() {\n    if (this.props.article.loading) {\n      return <p>Loading...</p>;\n    }\n\n    if (this.props.article.loading == true) {\n      const data = this.props.article.article.data;\n      console.log(this.props.article.article.data);\n      const dataArr = Object.values(data);\n      console.log(\"data: \");\n      console.log(data);\n      console.log(dataArr);\n    }\n\n    // console.log(typeof dataArr[0]);\n\n    // renderArticle = (article) => {\n    //   for (const key of Object.keys(article)) {\n    //     console.log(key, article[key]);\n    //   }\n    // };\n\n    return (\n      <Container>\n        {/* {dataArr} */}\n        {/* /* {article.name}\n        <br />\n        {article.author}\n        <br />\n        {article.body.split(\"\\r\").map((c) => {\n          return <p> {c} </p>;\n        })} */}\n      </Container>\n    );\n  }\n}\n\nArticleShow.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  //   console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n  //   return {\n  //     article: state.article.articles,\n  //   };\n  // };\n  article: state.article,\n});\n\nexport default connect(mapStateToProps, { getArticle })(ArticleShow);\n"]},"metadata":{},"sourceType":"module"}