{"ast":null,"code":"import { v4 as uuid } from \"uuid\";\nimport { GET_ARTICLES, ADD_ARTICLE, DELETE_ARTICLE, ARTICLES_LOADING } from \"../actions/types\"; // import { bindActionCreators } from \"redux\";\n\nconst intialState = {\n  articles: [],\n  loading: false\n};\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return { ...state\n      };\n\n    case DELETE_ARTICLE:\n      return { ...state,\n        articles: state.articles.filter(article => article.id !== action.payload)\n      };\n\n    case ADD_ARTICLE:\n      return { ...state,\n        articles: [action.payload, ...state.articles]\n      };\n\n    case ARTICLE_LOADING:\n      return { ...state,\n        loading: true\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/robertporto/env/mediaproject/client/src/reducers/articleReducer.js"],"names":["v4","uuid","GET_ARTICLES","ADD_ARTICLE","DELETE_ARTICLE","ARTICLES_LOADING","intialState","articles","loading","state","action","type","filter","article","id","payload","ARTICLE_LOADING"],"mappings":"AAAA,SAASA,EAAE,IAAIC,IAAf,QAA2B,MAA3B;AACA,SACEC,YADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,gBAJF,QAKO,kBALP,C,CAMA;;AAEA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,QAAQ,EAAE,EADQ;AAElBC,EAAAA,OAAO,EAAE;AAFS,CAApB;AAKA,eAAe,UAAUC,KAAK,GAAGH,WAAlB,EAA+BI,MAA/B,EAAuC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,YAAL;AACE,aAAO,EACL,GAAGO;AADE,OAAP;;AAGF,SAAKL,cAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELF,QAAAA,QAAQ,EAAEE,KAAK,CAACF,QAAN,CAAeK,MAAf,CACPC,OAAD,IAAaA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACK,OAD3B;AAFL,OAAP;;AAMF,SAAKZ,WAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELF,QAAAA,QAAQ,EAAE,CAACG,MAAM,CAACK,OAAR,EAAiB,GAAGN,KAAK,CAACF,QAA1B;AAFL,OAAP;;AAIF,SAAKS,eAAL;AACE,aAAO,EACL,GAAGP,KADE;AAELD,QAAAA,OAAO,EAAE;AAFJ,OAAP;;AAKF;AACE,aAAOC,KAAP;AAxBJ;AA0BD","sourcesContent":["import { v4 as uuid } from \"uuid\";\nimport {\n  GET_ARTICLES,\n  ADD_ARTICLE,\n  DELETE_ARTICLE,\n  ARTICLES_LOADING,\n} from \"../actions/types\";\n// import { bindActionCreators } from \"redux\";\n\nconst intialState = {\n  articles: [],\n  loading: false,\n};\n\nexport default function (state = intialState, action) {\n  switch (action.type) {\n    case GET_ARTICLES:\n      return {\n        ...state,\n      };\n    case DELETE_ARTICLE:\n      return {\n        ...state,\n        articles: state.articles.filter(\n          (article) => article.id !== action.payload\n        ),\n      };\n    case ADD_ARTICLE:\n      return {\n        ...state,\n        articles: [action.payload, ...state.articles],\n      };\n    case ARTICLE_LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}