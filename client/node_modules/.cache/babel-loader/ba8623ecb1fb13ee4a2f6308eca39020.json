{"ast":null,"code":"var _jsxFileName = \"/Users/robertporto/env/cityboyz/client/src/components/ArticleShow.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport PropTypes from \"prop-types\";\n\nclass ArticleShow extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.id);\n  }\n\n  render() {\n    console.log(\"show props: \");\n    console.log(this.props);\n    console.log(this.props.match);\n\n    if (this.props.article.loading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 14\n        }\n      }, \"fuck!\");\n    }\n\n    const data = this.props.article.data; // console.log(data);\n\n    function checkAndRenderBody() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.body;\n      }\n    }\n\n    function checkAndRenderName() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.name;\n      }\n    }\n\n    function checkAndRenderAuthor() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.author;\n      }\n    }\n\n    function checkAndRenderID() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data._id;\n      }\n    }\n\n    function checkAndRender(poop) {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.poop;\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }\n    }, checkAndRenderName()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, checkAndRenderAuthor()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, checkAndRenderBody()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, checkAndRenderID()), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nArticleShow.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired\n}; // const mapStateToProps = (state) => ({\n//   article: state.article,\n// });\n\nconst mapStateToProps = state => {\n  console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n\n  return {\n    article: state.article,\n    id: state.match.params.id\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getArticle\n})(ArticleShow);","map":{"version":3,"sources":["/Users/robertporto/env/cityboyz/client/src/components/ArticleShow.js"],"names":["React","Component","Container","connect","getArticle","PropTypes","ArticleShow","componentDidMount","props","id","render","console","log","match","article","loading","data","checkAndRenderBody","body","checkAndRenderName","name","checkAndRenderAuthor","author","checkAndRenderID","_id","checkAndRender","poop","propTypes","func","isRequired","object","mapStateToProps","state","params"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\n\nimport { connect } from \"react-redux\";\nimport { getArticle } from \"../actions/articleActions\";\nimport PropTypes from \"prop-types\";\n\nclass ArticleShow extends Component {\n  componentDidMount() {\n    this.props.getArticle(this.props.id);\n  }\n\n  render() {\n    console.log(\"show props: \");\n    console.log(this.props);\n    console.log(this.props.match);\n    if (this.props.article.loading) {\n      return <p>fuck!</p>;\n    }\n\n    const data = this.props.article.data;\n    // console.log(data);\n\n    function checkAndRenderBody() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.body;\n      }\n    }\n    function checkAndRenderName() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.name;\n      }\n    }\n    function checkAndRenderAuthor() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.author;\n      }\n    }\n    function checkAndRenderID() {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data._id;\n      }\n    }\n\n    function checkAndRender(poop) {\n      if (typeof data === \"undefined\") {\n        return;\n      } else {\n        return data.poop;\n      }\n    }\n\n    return (\n      <Container>\n        <p>{checkAndRenderName()}</p>\n        <p>{checkAndRenderAuthor()}</p>\n        <p>{checkAndRenderBody()}</p>\n        <p>{checkAndRenderID()}</p>\n        <br />\n        {/* {this.props.body.split(\"\\r\").map((c) => {\n          return <p> {c} </p>;\n        })} */}\n        <br />\n      </Container>\n    );\n  }\n}\n\nArticleShow.propTypes = {\n  getArticle: PropTypes.func.isRequired,\n  article: PropTypes.object.isRequired,\n};\n\n// const mapStateToProps = (state) => ({\n//   article: state.article,\n// });\n\nconst mapStateToProps = (state) => {\n  console.log(\"My store state ===>\", state); // log the `state` and see the exact path for articles\n  return {\n    article: state.article,\n    id: state.match.params.id,\n  };\n};\n\nexport default connect(mapStateToProps, { getArticle })(ArticleShow);\n"]},"metadata":{},"sourceType":"module"}